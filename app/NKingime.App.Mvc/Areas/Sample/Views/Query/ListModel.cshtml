@using NKingime.App.Entity
@using NKingime.Utility.Extensions
@using PagedList.Mvc

@model PagedList.IPagedList<User>
@{
    ViewBag.Title = "Query";
    var vid = Request.QueryString["v"].IfNullOrWhiteSpace(IdentityUtil.NewHex());
}

<div class="container">
    <h2>Model传递数据</h2>
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th class="col-md-2">ID</th>
                <th class="col-md-2">用户名</th>
                <th class="text-center">性别</th>
                <th class="col-md-1 text-right">生日</th>
                <th class="col-md-1 text-right">手机号码</th>
                <th>电子邮箱</th>
                <th class="col-md-2 text-right">注册时间</th>
                <th class="col-md-2 text-right">最后更新时间</th>
                <th class="col-md-1 text-center">操作</th>
            </tr>
        </thead>
        <tbody>
            @foreach (User user in @Model)
            {
                <tr>
                    <td class="text-nowrap">@user.Id</td>
                    <td class="text-nowrap">@user.Username</td>
                    <td class="text-center text-nowrap">@user.GenderType</td>
                    <td class="text-right text-nowrap">@user.Birthday.ToDateFormat()</td>
                    <td class="text-right text-nowrap">@user.Mobile</td>
                    <td class="text-nowrap">@user.Email</td>
                    <td class="text-right text-nowrap">@user.CreateTime</td>
                    <td class="text-right text-nowrap">@user.LastUpdateTime.ToLongTime()</td>
                    <td class="text-center text-nowrap">
                        @Html.ActionLink(" ", "Edit", "Update", new { uid = user.Id, v = vid }, new { @title = "编辑", @class = "btn btn-default btn-xs glyphicon glyphicon-edit" })
                        @Html.ActionLink(" ", "Delete", "Update", new { uid = user.Id, v = vid }, new { @title = "删除", @class = "btn btn-default btn-xs glyphicon glyphicon-remove" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @Html.PagedListPager(Model, page => Url.Action(Convert.ToString(ViewContext.RouteData.Values["action"]), new { page = page, v = vid }), new PagedListRenderOptions { LinkToFirstPageFormat = "首页", LinkToPreviousPageFormat = "上一页", LinkToNextPageFormat = "下一页", LinkToLastPageFormat = "尾页", MaximumPageNumbersToDisplay = 10 })
</div>
